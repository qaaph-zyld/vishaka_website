version: '3.8'

services:
  # Database
  postgres:
    image: postgis/postgis:15-3.3-alpine
    container_name: vishaka-db
    environment:
      POSTGRES_USER: vishaka
      POSTGRES_PASSWORD: your-secure-password
      POSTGRES_DB: vishaka
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vishaka"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: vishaka-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 5

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: vishaka-prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    depends_on:
      - postgres
      - redis

  grafana:
    image: grafana/grafana:latest
    container_name: vishaka-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  # Application Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: vishaka-backend
    environment:
      - DATABASE_URL=postgresql://vishaka:your-secure-password@postgres:5432/vishaka
      - REDIS_URL=redis://redis:6379/0
      - NODE_ENV=production
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: vishaka-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3001:3000"
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
